// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_well_known_types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/protobuf/unittest_well_known_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestWellKnownTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestWellKnownTypes_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/unittest_well_known_types.proto");
  GOOGLE_CHECK(file != NULL);
  TestWellKnownTypes_descriptor_ = file->message_type(0);
  static const int TestWellKnownTypes_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, any_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, api_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, duration_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, empty_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, field_mask_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, source_context_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, struct_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, timestamp_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, type_field_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, int32_field_),
  };
  TestWellKnownTypes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TestWellKnownTypes_descriptor_,
      TestWellKnownTypes::default_instance_,
      TestWellKnownTypes_offsets_,
      -1,
      -1,
      -1,
      sizeof(TestWellKnownTypes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestWellKnownTypes, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TestWellKnownTypes_descriptor_, &TestWellKnownTypes::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  delete TestWellKnownTypes::default_instance_;
  delete TestWellKnownTypes_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fapi_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fduration_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ffield_5fmask_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fsource_5fcontext_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fstruct_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftype_2eproto();
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fwrappers_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/google/protobuf/unittest_well_known_ty"
    "pes.proto\022\021protobuf_unittest\032\031google/pro"
    "tobuf/any.proto\032\031google/protobuf/api.pro"
    "to\032\036google/protobuf/duration.proto\032\033goog"
    "le/protobuf/empty.proto\032 google/protobuf"
    "/field_mask.proto\032$google/protobuf/sourc"
    "e_context.proto\032\034google/protobuf/struct."
    "proto\032\037google/protobuf/timestamp.proto\032\032"
    "google/protobuf/type.proto\032\036google/proto"
    "buf/wrappers.proto\"\373\003\n\022TestWellKnownType"
    "s\022\'\n\tany_field\030\001 \001(\0132\024.google.protobuf.A"
    "ny\022\'\n\tapi_field\030\002 \001(\0132\024.google.protobuf."
    "Api\0221\n\016duration_field\030\003 \001(\0132\031.google.pro"
    "tobuf.Duration\022+\n\013empty_field\030\004 \001(\0132\026.go"
    "ogle.protobuf.Empty\0224\n\020field_mask_field\030"
    "\005 \001(\0132\032.google.protobuf.FieldMask\022<\n\024sou"
    "rce_context_field\030\006 \001(\0132\036.google.protobu"
    "f.SourceContext\022-\n\014struct_field\030\007 \001(\0132\027."
    "google.protobuf.Struct\0223\n\017timestamp_fiel"
    "d\030\010 \001(\0132\032.google.protobuf.Timestamp\022)\n\nt"
    "ype_field\030\t \001(\0132\025.google.protobuf.Type\0220"
    "\n\013int32_field\030\n \001(\0132\033.google.protobuf.In"
    "t32ValueB\034\n\030com.google.protobuf.testP\001b\006"
    "proto3", 926);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/unittest_well_known_types.proto", &protobuf_RegisterTypes);
  TestWellKnownTypes::default_instance_ = new TestWellKnownTypes();
  TestWellKnownTypes::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int TestWellKnownTypes::kAnyFieldFieldNumber;
const int TestWellKnownTypes::kApiFieldFieldNumber;
const int TestWellKnownTypes::kDurationFieldFieldNumber;
const int TestWellKnownTypes::kEmptyFieldFieldNumber;
const int TestWellKnownTypes::kFieldMaskFieldFieldNumber;
const int TestWellKnownTypes::kSourceContextFieldFieldNumber;
const int TestWellKnownTypes::kStructFieldFieldNumber;
const int TestWellKnownTypes::kTimestampFieldFieldNumber;
const int TestWellKnownTypes::kTypeFieldFieldNumber;
const int TestWellKnownTypes::kInt32FieldFieldNumber;
#endif  // !_MSC_VER

TestWellKnownTypes::TestWellKnownTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestWellKnownTypes)
}

void TestWellKnownTypes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  any_field_ = const_cast< ::google::protobuf::Any*>(&::google::protobuf::Any::default_instance());
  api_field_ = const_cast< ::google::protobuf::Api*>(&::google::protobuf::Api::default_instance());
  duration_field_ = const_cast< ::google::protobuf::Duration*>(&::google::protobuf::Duration::default_instance());
  empty_field_ = const_cast< ::google::protobuf::Empty*>(&::google::protobuf::Empty::default_instance());
  field_mask_field_ = const_cast< ::google::protobuf::FieldMask*>(&::google::protobuf::FieldMask::default_instance());
  source_context_field_ = const_cast< ::google::protobuf::SourceContext*>(&::google::protobuf::SourceContext::default_instance());
  struct_field_ = const_cast< ::google::protobuf::Struct*>(&::google::protobuf::Struct::default_instance());
  timestamp_field_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  type_field_ = const_cast< ::google::protobuf::Type*>(&::google::protobuf::Type::default_instance());
  int32_field_ = const_cast< ::google::protobuf::Int32Value*>(&::google::protobuf::Int32Value::default_instance());
}

TestWellKnownTypes::TestWellKnownTypes(const TestWellKnownTypes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestWellKnownTypes)
}

void TestWellKnownTypes::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  any_field_ = NULL;
  api_field_ = NULL;
  duration_field_ = NULL;
  empty_field_ = NULL;
  field_mask_field_ = NULL;
  source_context_field_ = NULL;
  struct_field_ = NULL;
  timestamp_field_ = NULL;
  type_field_ = NULL;
  int32_field_ = NULL;
}

TestWellKnownTypes::~TestWellKnownTypes() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestWellKnownTypes)
  SharedDtor();
}

void TestWellKnownTypes::SharedDtor() {
  if (this != default_instance_) {
    delete any_field_;
    delete api_field_;
    delete duration_field_;
    delete empty_field_;
    delete field_mask_field_;
    delete source_context_field_;
    delete struct_field_;
    delete timestamp_field_;
    delete type_field_;
    delete int32_field_;
  }
}

void TestWellKnownTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestWellKnownTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TestWellKnownTypes_descriptor_;
}

const TestWellKnownTypes& TestWellKnownTypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2funittest_5fwell_5fknown_5ftypes_2eproto();
  return *default_instance_;
}

TestWellKnownTypes* TestWellKnownTypes::default_instance_ = NULL;

TestWellKnownTypes* TestWellKnownTypes::New(::google::protobuf::Arena* arena) const {
  TestWellKnownTypes* n = new TestWellKnownTypes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestWellKnownTypes::Clear() {
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) delete any_field_;
  any_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && api_field_ != NULL) delete api_field_;
  api_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_field_ != NULL) delete duration_field_;
  duration_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && empty_field_ != NULL) delete empty_field_;
  empty_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && field_mask_field_ != NULL) delete field_mask_field_;
  field_mask_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_context_field_ != NULL) delete source_context_field_;
  source_context_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && struct_field_ != NULL) delete struct_field_;
  struct_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_field_ != NULL) delete timestamp_field_;
  timestamp_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_field_ != NULL) delete type_field_;
  type_field_ = NULL;
  if (GetArenaNoVirtual() == NULL && int32_field_ != NULL) delete int32_field_;
  int32_field_ = NULL;
}

bool TestWellKnownTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf_unittest.TestWellKnownTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.Any any_field = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_api_field;
        break;
      }

      // optional .google.protobuf.Api api_field = 2;
      case 2: {
        if (tag == 18) {
         parse_api_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_api_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_duration_field;
        break;
      }

      // optional .google.protobuf.Duration duration_field = 3;
      case 3: {
        if (tag == 26) {
         parse_duration_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_duration_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_empty_field;
        break;
      }

      // optional .google.protobuf.Empty empty_field = 4;
      case 4: {
        if (tag == 34) {
         parse_empty_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_empty_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_field_mask_field;
        break;
      }

      // optional .google.protobuf.FieldMask field_mask_field = 5;
      case 5: {
        if (tag == 42) {
         parse_field_mask_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field_mask_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_source_context_field;
        break;
      }

      // optional .google.protobuf.SourceContext source_context_field = 6;
      case 6: {
        if (tag == 50) {
         parse_source_context_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_source_context_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_struct_field;
        break;
      }

      // optional .google.protobuf.Struct struct_field = 7;
      case 7: {
        if (tag == 58) {
         parse_struct_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_struct_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_timestamp_field;
        break;
      }

      // optional .google.protobuf.Timestamp timestamp_field = 8;
      case 8: {
        if (tag == 66) {
         parse_timestamp_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_type_field;
        break;
      }

      // optional .google.protobuf.Type type_field = 9;
      case 9: {
        if (tag == 74) {
         parse_type_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_int32_field;
        break;
      }

      // optional .google.protobuf.Int32Value int32_field = 10;
      case 10: {
        if (tag == 82) {
         parse_int32_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int32_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf_unittest.TestWellKnownTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf_unittest.TestWellKnownTypes)
  return false;
#undef DO_
}

void TestWellKnownTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf_unittest.TestWellKnownTypes)
  // optional .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->any_field_, output);
  }

  // optional .google.protobuf.Api api_field = 2;
  if (this->has_api_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->api_field_, output);
  }

  // optional .google.protobuf.Duration duration_field = 3;
  if (this->has_duration_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->duration_field_, output);
  }

  // optional .google.protobuf.Empty empty_field = 4;
  if (this->has_empty_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->empty_field_, output);
  }

  // optional .google.protobuf.FieldMask field_mask_field = 5;
  if (this->has_field_mask_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->field_mask_field_, output);
  }

  // optional .google.protobuf.SourceContext source_context_field = 6;
  if (this->has_source_context_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->source_context_field_, output);
  }

  // optional .google.protobuf.Struct struct_field = 7;
  if (this->has_struct_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->struct_field_, output);
  }

  // optional .google.protobuf.Timestamp timestamp_field = 8;
  if (this->has_timestamp_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->timestamp_field_, output);
  }

  // optional .google.protobuf.Type type_field = 9;
  if (this->has_type_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->type_field_, output);
  }

  // optional .google.protobuf.Int32Value int32_field = 10;
  if (this->has_int32_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->int32_field_, output);
  }

  // @@protoc_insertion_point(serialize_end:protobuf_unittest.TestWellKnownTypes)
}

::google::protobuf::uint8* TestWellKnownTypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestWellKnownTypes)
  // optional .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->any_field_, target);
  }

  // optional .google.protobuf.Api api_field = 2;
  if (this->has_api_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->api_field_, target);
  }

  // optional .google.protobuf.Duration duration_field = 3;
  if (this->has_duration_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->duration_field_, target);
  }

  // optional .google.protobuf.Empty empty_field = 4;
  if (this->has_empty_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->empty_field_, target);
  }

  // optional .google.protobuf.FieldMask field_mask_field = 5;
  if (this->has_field_mask_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->field_mask_field_, target);
  }

  // optional .google.protobuf.SourceContext source_context_field = 6;
  if (this->has_source_context_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->source_context_field_, target);
  }

  // optional .google.protobuf.Struct struct_field = 7;
  if (this->has_struct_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->struct_field_, target);
  }

  // optional .google.protobuf.Timestamp timestamp_field = 8;
  if (this->has_timestamp_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->timestamp_field_, target);
  }

  // optional .google.protobuf.Type type_field = 9;
  if (this->has_type_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, *this->type_field_, target);
  }

  // optional .google.protobuf.Int32Value int32_field = 10;
  if (this->has_int32_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, *this->int32_field_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestWellKnownTypes)
  return target;
}

int TestWellKnownTypes::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->any_field_);
  }

  // optional .google.protobuf.Api api_field = 2;
  if (this->has_api_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->api_field_);
  }

  // optional .google.protobuf.Duration duration_field = 3;
  if (this->has_duration_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->duration_field_);
  }

  // optional .google.protobuf.Empty empty_field = 4;
  if (this->has_empty_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->empty_field_);
  }

  // optional .google.protobuf.FieldMask field_mask_field = 5;
  if (this->has_field_mask_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->field_mask_field_);
  }

  // optional .google.protobuf.SourceContext source_context_field = 6;
  if (this->has_source_context_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->source_context_field_);
  }

  // optional .google.protobuf.Struct struct_field = 7;
  if (this->has_struct_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->struct_field_);
  }

  // optional .google.protobuf.Timestamp timestamp_field = 8;
  if (this->has_timestamp_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timestamp_field_);
  }

  // optional .google.protobuf.Type type_field = 9;
  if (this->has_type_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_field_);
  }

  // optional .google.protobuf.Int32Value int32_field = 10;
  if (this->has_int32_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->int32_field_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestWellKnownTypes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TestWellKnownTypes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TestWellKnownTypes>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestWellKnownTypes::MergeFrom(const TestWellKnownTypes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_any_field()) {
    mutable_any_field()->::google::protobuf::Any::MergeFrom(from.any_field());
  }
  if (from.has_api_field()) {
    mutable_api_field()->::google::protobuf::Api::MergeFrom(from.api_field());
  }
  if (from.has_duration_field()) {
    mutable_duration_field()->::google::protobuf::Duration::MergeFrom(from.duration_field());
  }
  if (from.has_empty_field()) {
    mutable_empty_field()->::google::protobuf::Empty::MergeFrom(from.empty_field());
  }
  if (from.has_field_mask_field()) {
    mutable_field_mask_field()->::google::protobuf::FieldMask::MergeFrom(from.field_mask_field());
  }
  if (from.has_source_context_field()) {
    mutable_source_context_field()->::google::protobuf::SourceContext::MergeFrom(from.source_context_field());
  }
  if (from.has_struct_field()) {
    mutable_struct_field()->::google::protobuf::Struct::MergeFrom(from.struct_field());
  }
  if (from.has_timestamp_field()) {
    mutable_timestamp_field()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_field());
  }
  if (from.has_type_field()) {
    mutable_type_field()->::google::protobuf::Type::MergeFrom(from.type_field());
  }
  if (from.has_int32_field()) {
    mutable_int32_field()->::google::protobuf::Int32Value::MergeFrom(from.int32_field());
  }
}

void TestWellKnownTypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestWellKnownTypes::CopyFrom(const TestWellKnownTypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestWellKnownTypes::IsInitialized() const {

  return true;
}

void TestWellKnownTypes::Swap(TestWellKnownTypes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestWellKnownTypes::InternalSwap(TestWellKnownTypes* other) {
  std::swap(any_field_, other->any_field_);
  std::swap(api_field_, other->api_field_);
  std::swap(duration_field_, other->duration_field_);
  std::swap(empty_field_, other->empty_field_);
  std::swap(field_mask_field_, other->field_mask_field_);
  std::swap(source_context_field_, other->source_context_field_);
  std::swap(struct_field_, other->struct_field_);
  std::swap(timestamp_field_, other->timestamp_field_);
  std::swap(type_field_, other->type_field_);
  std::swap(int32_field_, other->int32_field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestWellKnownTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TestWellKnownTypes_descriptor_;
  metadata.reflection = TestWellKnownTypes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TestWellKnownTypes

// optional .google.protobuf.Any any_field = 1;
bool TestWellKnownTypes::has_any_field() const {
  return !_is_default_instance_ && any_field_ != NULL;
}
void TestWellKnownTypes::clear_any_field() {
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) delete any_field_;
  any_field_ = NULL;
}
 const ::google::protobuf::Any& TestWellKnownTypes::any_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.any_field)
  return any_field_ != NULL ? *any_field_ : *default_instance_->any_field_;
}
 ::google::protobuf::Any* TestWellKnownTypes::mutable_any_field() {
  
  if (any_field_ == NULL) {
    any_field_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.any_field)
  return any_field_;
}
 ::google::protobuf::Any* TestWellKnownTypes::release_any_field() {
  
  ::google::protobuf::Any* temp = any_field_;
  any_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_any_field(::google::protobuf::Any* any_field) {
  delete any_field_;
  any_field_ = any_field;
  if (any_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.any_field)
}

// optional .google.protobuf.Api api_field = 2;
bool TestWellKnownTypes::has_api_field() const {
  return !_is_default_instance_ && api_field_ != NULL;
}
void TestWellKnownTypes::clear_api_field() {
  if (GetArenaNoVirtual() == NULL && api_field_ != NULL) delete api_field_;
  api_field_ = NULL;
}
 const ::google::protobuf::Api& TestWellKnownTypes::api_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.api_field)
  return api_field_ != NULL ? *api_field_ : *default_instance_->api_field_;
}
 ::google::protobuf::Api* TestWellKnownTypes::mutable_api_field() {
  
  if (api_field_ == NULL) {
    api_field_ = new ::google::protobuf::Api;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.api_field)
  return api_field_;
}
 ::google::protobuf::Api* TestWellKnownTypes::release_api_field() {
  
  ::google::protobuf::Api* temp = api_field_;
  api_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_api_field(::google::protobuf::Api* api_field) {
  delete api_field_;
  api_field_ = api_field;
  if (api_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.api_field)
}

// optional .google.protobuf.Duration duration_field = 3;
bool TestWellKnownTypes::has_duration_field() const {
  return !_is_default_instance_ && duration_field_ != NULL;
}
void TestWellKnownTypes::clear_duration_field() {
  if (GetArenaNoVirtual() == NULL && duration_field_ != NULL) delete duration_field_;
  duration_field_ = NULL;
}
 const ::google::protobuf::Duration& TestWellKnownTypes::duration_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.duration_field)
  return duration_field_ != NULL ? *duration_field_ : *default_instance_->duration_field_;
}
 ::google::protobuf::Duration* TestWellKnownTypes::mutable_duration_field() {
  
  if (duration_field_ == NULL) {
    duration_field_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.duration_field)
  return duration_field_;
}
 ::google::protobuf::Duration* TestWellKnownTypes::release_duration_field() {
  
  ::google::protobuf::Duration* temp = duration_field_;
  duration_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_duration_field(::google::protobuf::Duration* duration_field) {
  delete duration_field_;
  duration_field_ = duration_field;
  if (duration_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.duration_field)
}

// optional .google.protobuf.Empty empty_field = 4;
bool TestWellKnownTypes::has_empty_field() const {
  return !_is_default_instance_ && empty_field_ != NULL;
}
void TestWellKnownTypes::clear_empty_field() {
  if (GetArenaNoVirtual() == NULL && empty_field_ != NULL) delete empty_field_;
  empty_field_ = NULL;
}
 const ::google::protobuf::Empty& TestWellKnownTypes::empty_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.empty_field)
  return empty_field_ != NULL ? *empty_field_ : *default_instance_->empty_field_;
}
 ::google::protobuf::Empty* TestWellKnownTypes::mutable_empty_field() {
  
  if (empty_field_ == NULL) {
    empty_field_ = new ::google::protobuf::Empty;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.empty_field)
  return empty_field_;
}
 ::google::protobuf::Empty* TestWellKnownTypes::release_empty_field() {
  
  ::google::protobuf::Empty* temp = empty_field_;
  empty_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_empty_field(::google::protobuf::Empty* empty_field) {
  delete empty_field_;
  empty_field_ = empty_field;
  if (empty_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.empty_field)
}

// optional .google.protobuf.FieldMask field_mask_field = 5;
bool TestWellKnownTypes::has_field_mask_field() const {
  return !_is_default_instance_ && field_mask_field_ != NULL;
}
void TestWellKnownTypes::clear_field_mask_field() {
  if (GetArenaNoVirtual() == NULL && field_mask_field_ != NULL) delete field_mask_field_;
  field_mask_field_ = NULL;
}
 const ::google::protobuf::FieldMask& TestWellKnownTypes::field_mask_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.field_mask_field)
  return field_mask_field_ != NULL ? *field_mask_field_ : *default_instance_->field_mask_field_;
}
 ::google::protobuf::FieldMask* TestWellKnownTypes::mutable_field_mask_field() {
  
  if (field_mask_field_ == NULL) {
    field_mask_field_ = new ::google::protobuf::FieldMask;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.field_mask_field)
  return field_mask_field_;
}
 ::google::protobuf::FieldMask* TestWellKnownTypes::release_field_mask_field() {
  
  ::google::protobuf::FieldMask* temp = field_mask_field_;
  field_mask_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_field_mask_field(::google::protobuf::FieldMask* field_mask_field) {
  delete field_mask_field_;
  field_mask_field_ = field_mask_field;
  if (field_mask_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.field_mask_field)
}

// optional .google.protobuf.SourceContext source_context_field = 6;
bool TestWellKnownTypes::has_source_context_field() const {
  return !_is_default_instance_ && source_context_field_ != NULL;
}
void TestWellKnownTypes::clear_source_context_field() {
  if (GetArenaNoVirtual() == NULL && source_context_field_ != NULL) delete source_context_field_;
  source_context_field_ = NULL;
}
 const ::google::protobuf::SourceContext& TestWellKnownTypes::source_context_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.source_context_field)
  return source_context_field_ != NULL ? *source_context_field_ : *default_instance_->source_context_field_;
}
 ::google::protobuf::SourceContext* TestWellKnownTypes::mutable_source_context_field() {
  
  if (source_context_field_ == NULL) {
    source_context_field_ = new ::google::protobuf::SourceContext;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.source_context_field)
  return source_context_field_;
}
 ::google::protobuf::SourceContext* TestWellKnownTypes::release_source_context_field() {
  
  ::google::protobuf::SourceContext* temp = source_context_field_;
  source_context_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_source_context_field(::google::protobuf::SourceContext* source_context_field) {
  delete source_context_field_;
  source_context_field_ = source_context_field;
  if (source_context_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.source_context_field)
}

// optional .google.protobuf.Struct struct_field = 7;
bool TestWellKnownTypes::has_struct_field() const {
  return !_is_default_instance_ && struct_field_ != NULL;
}
void TestWellKnownTypes::clear_struct_field() {
  if (GetArenaNoVirtual() == NULL && struct_field_ != NULL) delete struct_field_;
  struct_field_ = NULL;
}
 const ::google::protobuf::Struct& TestWellKnownTypes::struct_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.struct_field)
  return struct_field_ != NULL ? *struct_field_ : *default_instance_->struct_field_;
}
 ::google::protobuf::Struct* TestWellKnownTypes::mutable_struct_field() {
  
  if (struct_field_ == NULL) {
    struct_field_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.struct_field)
  return struct_field_;
}
 ::google::protobuf::Struct* TestWellKnownTypes::release_struct_field() {
  
  ::google::protobuf::Struct* temp = struct_field_;
  struct_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_struct_field(::google::protobuf::Struct* struct_field) {
  delete struct_field_;
  struct_field_ = struct_field;
  if (struct_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.struct_field)
}

// optional .google.protobuf.Timestamp timestamp_field = 8;
bool TestWellKnownTypes::has_timestamp_field() const {
  return !_is_default_instance_ && timestamp_field_ != NULL;
}
void TestWellKnownTypes::clear_timestamp_field() {
  if (GetArenaNoVirtual() == NULL && timestamp_field_ != NULL) delete timestamp_field_;
  timestamp_field_ = NULL;
}
 const ::google::protobuf::Timestamp& TestWellKnownTypes::timestamp_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.timestamp_field)
  return timestamp_field_ != NULL ? *timestamp_field_ : *default_instance_->timestamp_field_;
}
 ::google::protobuf::Timestamp* TestWellKnownTypes::mutable_timestamp_field() {
  
  if (timestamp_field_ == NULL) {
    timestamp_field_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.timestamp_field)
  return timestamp_field_;
}
 ::google::protobuf::Timestamp* TestWellKnownTypes::release_timestamp_field() {
  
  ::google::protobuf::Timestamp* temp = timestamp_field_;
  timestamp_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_timestamp_field(::google::protobuf::Timestamp* timestamp_field) {
  delete timestamp_field_;
  timestamp_field_ = timestamp_field;
  if (timestamp_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.timestamp_field)
}

// optional .google.protobuf.Type type_field = 9;
bool TestWellKnownTypes::has_type_field() const {
  return !_is_default_instance_ && type_field_ != NULL;
}
void TestWellKnownTypes::clear_type_field() {
  if (GetArenaNoVirtual() == NULL && type_field_ != NULL) delete type_field_;
  type_field_ = NULL;
}
 const ::google::protobuf::Type& TestWellKnownTypes::type_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.type_field)
  return type_field_ != NULL ? *type_field_ : *default_instance_->type_field_;
}
 ::google::protobuf::Type* TestWellKnownTypes::mutable_type_field() {
  
  if (type_field_ == NULL) {
    type_field_ = new ::google::protobuf::Type;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.type_field)
  return type_field_;
}
 ::google::protobuf::Type* TestWellKnownTypes::release_type_field() {
  
  ::google::protobuf::Type* temp = type_field_;
  type_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_type_field(::google::protobuf::Type* type_field) {
  delete type_field_;
  type_field_ = type_field;
  if (type_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.type_field)
}

// optional .google.protobuf.Int32Value int32_field = 10;
bool TestWellKnownTypes::has_int32_field() const {
  return !_is_default_instance_ && int32_field_ != NULL;
}
void TestWellKnownTypes::clear_int32_field() {
  if (GetArenaNoVirtual() == NULL && int32_field_ != NULL) delete int32_field_;
  int32_field_ = NULL;
}
 const ::google::protobuf::Int32Value& TestWellKnownTypes::int32_field() const {
  // @@protoc_insertion_point(field_get:protobuf_unittest.TestWellKnownTypes.int32_field)
  return int32_field_ != NULL ? *int32_field_ : *default_instance_->int32_field_;
}
 ::google::protobuf::Int32Value* TestWellKnownTypes::mutable_int32_field() {
  
  if (int32_field_ == NULL) {
    int32_field_ = new ::google::protobuf::Int32Value;
  }
  // @@protoc_insertion_point(field_mutable:protobuf_unittest.TestWellKnownTypes.int32_field)
  return int32_field_;
}
 ::google::protobuf::Int32Value* TestWellKnownTypes::release_int32_field() {
  
  ::google::protobuf::Int32Value* temp = int32_field_;
  int32_field_ = NULL;
  return temp;
}
 void TestWellKnownTypes::set_allocated_int32_field(::google::protobuf::Int32Value* int32_field) {
  delete int32_field_;
  int32_field_ = int32_field;
  if (int32_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_unittest.TestWellKnownTypes.int32_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_unittest

// @@protoc_insertion_point(global_scope)
