// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Desktop/Motes Protobuf/update_protocol.proto

#ifndef PROTOBUF_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

class Position;
class Rotation;
class DataDescription;
class LabeledMarker;
class TrackedBody;
class Mocap;
class Mote;
class Update;
class Updates;

// ===================================================================

class Position : public ::google::protobuf::Message {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  void UnsafeArenaSwap(Position* other);
  void Swap(Position* other);

  // implements Message ----------------------------------------------

  inline Position* New() const { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Position* other);
  protected:
  explicit Position(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // required float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Position)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// -------------------------------------------------------------------

class Rotation : public ::google::protobuf::Message {
 public:
  Rotation();
  virtual ~Rotation();

  Rotation(const Rotation& from);

  inline Rotation& operator=(const Rotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Rotation& default_instance();

  void UnsafeArenaSwap(Rotation* other);
  void Swap(Rotation* other);

  // implements Message ----------------------------------------------

  inline Rotation* New() const { return New(NULL); }

  Rotation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Rotation& from);
  void MergeFrom(const Rotation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Rotation* other);
  protected:
  explicit Rotation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // required float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // required float w = 4;
  bool has_w() const;
  void clear_w();
  static const int kWFieldNumber = 4;
  float w() const;
  void set_w(float value);

  // @@protoc_insertion_point(class_scope:Rotation)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_w();
  inline void clear_has_w();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  float x_;
  float y_;
  float z_;
  float w_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Rotation* default_instance_;
};
// -------------------------------------------------------------------

class DataDescription : public ::google::protobuf::Message {
 public:
  DataDescription();
  virtual ~DataDescription();

  DataDescription(const DataDescription& from);

  inline DataDescription& operator=(const DataDescription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataDescription& default_instance();

  void UnsafeArenaSwap(DataDescription* other);
  void Swap(DataDescription* other);

  // implements Message ----------------------------------------------

  inline DataDescription* New() const { return New(NULL); }

  DataDescription* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataDescription& from);
  void MergeFrom(const DataDescription& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataDescription* other);
  protected:
  explicit DataDescription(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // required int32 dd_id = 2;
  bool has_dd_id() const;
  void clear_dd_id();
  static const int kDdIdFieldNumber = 2;
  ::google::protobuf::int32 dd_id() const;
  void set_dd_id(::google::protobuf::int32 value);

  // required int32 item_id = 3;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // required sint32 parentId = 4;
  bool has_parentid() const;
  void clear_parentid();
  static const int kParentIdFieldNumber = 4;
  ::google::protobuf::int32 parentid() const;
  void set_parentid(::google::protobuf::int32 value);

  // required sint32 parentOffsetX = 5;
  bool has_parentoffsetx() const;
  void clear_parentoffsetx();
  static const int kParentOffsetXFieldNumber = 5;
  ::google::protobuf::int32 parentoffsetx() const;
  void set_parentoffsetx(::google::protobuf::int32 value);

  // required sint32 parentOffsetY = 6;
  bool has_parentoffsety() const;
  void clear_parentoffsety();
  static const int kParentOffsetYFieldNumber = 6;
  ::google::protobuf::int32 parentoffsety() const;
  void set_parentoffsety(::google::protobuf::int32 value);

  // required sint32 parentOffsetZ = 7;
  bool has_parentoffsetz() const;
  void clear_parentoffsetz();
  static const int kParentOffsetZFieldNumber = 7;
  ::google::protobuf::int32 parentoffsetz() const;
  void set_parentoffsetz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DataDescription)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_dd_id();
  inline void clear_has_dd_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_parentid();
  inline void clear_has_parentid();
  inline void set_has_parentoffsetx();
  inline void clear_has_parentoffsetx();
  inline void set_has_parentoffsety();
  inline void clear_has_parentoffsety();
  inline void set_has_parentoffsetz();
  inline void clear_has_parentoffsetz();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 dd_id_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 parentid_;
  ::google::protobuf::int32 parentoffsetx_;
  ::google::protobuf::int32 parentoffsety_;
  ::google::protobuf::int32 parentoffsetz_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static DataDescription* default_instance_;
};
// -------------------------------------------------------------------

class LabeledMarker : public ::google::protobuf::Message {
 public:
  LabeledMarker();
  virtual ~LabeledMarker();

  LabeledMarker(const LabeledMarker& from);

  inline LabeledMarker& operator=(const LabeledMarker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabeledMarker& default_instance();

  void UnsafeArenaSwap(LabeledMarker* other);
  void Swap(LabeledMarker* other);

  // implements Message ----------------------------------------------

  inline LabeledMarker* New() const { return New(NULL); }

  LabeledMarker* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LabeledMarker& from);
  void MergeFrom(const LabeledMarker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LabeledMarker* other);
  protected:
  explicit LabeledMarker(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required float size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  float size() const;
  void set_size(float value);

  // required .Position position = 3;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 3;
  private:
  void _slow_mutable_position();
  void _slow_set_allocated_position(
      ::google::protobuf::Arena* message_arena, ::Position** position);
  ::Position* _slow_release_position();
  public:
  const ::Position& position() const;
  ::Position* mutable_position();
  ::Position* release_position();
  void set_allocated_position(::Position* position);
  ::Position* unsafe_arena_release_position();
  void unsafe_arena_set_allocated_position(
      ::Position* position);

  // @@protoc_insertion_point(class_scope:LabeledMarker)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_position();
  inline void clear_has_position();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  float size_;
  ::Position* position_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static LabeledMarker* default_instance_;
};
// -------------------------------------------------------------------

class TrackedBody : public ::google::protobuf::Message {
 public:
  TrackedBody();
  virtual ~TrackedBody();

  TrackedBody(const TrackedBody& from);

  inline TrackedBody& operator=(const TrackedBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackedBody& default_instance();

  void UnsafeArenaSwap(TrackedBody* other);
  void Swap(TrackedBody* other);

  // implements Message ----------------------------------------------

  inline TrackedBody* New() const { return New(NULL); }

  TrackedBody* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackedBody& from);
  void MergeFrom(const TrackedBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackedBody* other);
  protected:
  explicit TrackedBody(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required string label = 2;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 2;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);
  ::std::string* unsafe_arena_release_label();
  void unsafe_arena_set_allocated_label(
      ::std::string* label);

  // required bool trackingValid = 3;
  bool has_trackingvalid() const;
  void clear_trackingvalid();
  static const int kTrackingValidFieldNumber = 3;
  bool trackingvalid() const;
  void set_trackingvalid(bool value);

  // required .Position position = 4;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 4;
  private:
  void _slow_mutable_position();
  void _slow_set_allocated_position(
      ::google::protobuf::Arena* message_arena, ::Position** position);
  ::Position* _slow_release_position();
  public:
  const ::Position& position() const;
  ::Position* mutable_position();
  ::Position* release_position();
  void set_allocated_position(::Position* position);
  ::Position* unsafe_arena_release_position();
  void unsafe_arena_set_allocated_position(
      ::Position* position);

  // required .Rotation rotation = 5;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 5;
  private:
  void _slow_mutable_rotation();
  void _slow_set_allocated_rotation(
      ::google::protobuf::Arena* message_arena, ::Rotation** rotation);
  ::Rotation* _slow_release_rotation();
  public:
  const ::Rotation& rotation() const;
  ::Rotation* mutable_rotation();
  ::Rotation* release_rotation();
  void set_allocated_rotation(::Rotation* rotation);
  ::Rotation* unsafe_arena_release_rotation();
  void unsafe_arena_set_allocated_rotation(
      ::Rotation* rotation);

  // optional float meanError = 6;
  bool has_meanerror() const;
  void clear_meanerror();
  static const int kMeanErrorFieldNumber = 6;
  float meanerror() const;
  void set_meanerror(float value);

  // repeated .LabeledMarker markers = 7;
  int markers_size() const;
  void clear_markers();
  static const int kMarkersFieldNumber = 7;
  const ::LabeledMarker& markers(int index) const;
  ::LabeledMarker* mutable_markers(int index);
  ::LabeledMarker* add_markers();
  const ::google::protobuf::RepeatedPtrField< ::LabeledMarker >&
      markers() const;
  ::google::protobuf::RepeatedPtrField< ::LabeledMarker >*
      mutable_markers();

  // @@protoc_insertion_point(class_scope:TrackedBody)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_trackingvalid();
  inline void clear_has_trackingvalid();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_rotation();
  inline void clear_has_rotation();
  inline void set_has_meanerror();
  inline void clear_has_meanerror();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int32 id_;
  bool trackingvalid_;
  ::Position* position_;
  ::Rotation* rotation_;
  ::google::protobuf::RepeatedPtrField< ::LabeledMarker > markers_;
  float meanerror_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static TrackedBody* default_instance_;
};
// -------------------------------------------------------------------

class Mocap : public ::google::protobuf::Message {
 public:
  Mocap();
  virtual ~Mocap();

  Mocap(const Mocap& from);

  inline Mocap& operator=(const Mocap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Mocap& default_instance();

  void UnsafeArenaSwap(Mocap* other);
  void Swap(Mocap* other);

  // implements Message ----------------------------------------------

  inline Mocap* New() const { return New(NULL); }

  Mocap* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mocap& from);
  void MergeFrom(const Mocap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Mocap* other);
  protected:
  explicit Mocap(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool duringRecording = 1;
  bool has_duringrecording() const;
  void clear_duringrecording();
  static const int kDuringRecordingFieldNumber = 1;
  bool duringrecording() const;
  void set_duringrecording(bool value);

  // required bool trackedModelsChanged = 2;
  bool has_trackedmodelschanged() const;
  void clear_trackedmodelschanged();
  static const int kTrackedModelsChangedFieldNumber = 2;
  bool trackedmodelschanged() const;
  void set_trackedmodelschanged(bool value);

  // optional string timecode = 3;
  bool has_timecode() const;
  void clear_timecode();
  static const int kTimecodeFieldNumber = 3;
  const ::std::string& timecode() const;
  void set_timecode(const ::std::string& value);
  void set_timecode(const char* value);
  void set_timecode(const char* value, size_t size);
  ::std::string* mutable_timecode();
  ::std::string* release_timecode();
  void set_allocated_timecode(::std::string* timecode);
  ::std::string* unsafe_arena_release_timecode();
  void unsafe_arena_set_allocated_timecode(
      ::std::string* timecode);

  // repeated .TrackedBody tracked_bodies = 4;
  int tracked_bodies_size() const;
  void clear_tracked_bodies();
  static const int kTrackedBodiesFieldNumber = 4;
  const ::TrackedBody& tracked_bodies(int index) const;
  ::TrackedBody* mutable_tracked_bodies(int index);
  ::TrackedBody* add_tracked_bodies();
  const ::google::protobuf::RepeatedPtrField< ::TrackedBody >&
      tracked_bodies() const;
  ::google::protobuf::RepeatedPtrField< ::TrackedBody >*
      mutable_tracked_bodies();

  // @@protoc_insertion_point(class_scope:Mocap)
 private:
  inline void set_has_duringrecording();
  inline void clear_has_duringrecording();
  inline void set_has_trackedmodelschanged();
  inline void clear_has_trackedmodelschanged();
  inline void set_has_timecode();
  inline void clear_has_timecode();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr timecode_;
  ::google::protobuf::RepeatedPtrField< ::TrackedBody > tracked_bodies_;
  bool duringrecording_;
  bool trackedmodelschanged_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Mocap* default_instance_;
};
// -------------------------------------------------------------------

class Mote : public ::google::protobuf::Message {
 public:
  Mote();
  virtual ~Mote();

  Mote(const Mote& from);

  inline Mote& operator=(const Mote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Mote& default_instance();

  void UnsafeArenaSwap(Mote* other);
  void Swap(Mote* other);

  // implements Message ----------------------------------------------

  inline Mote* New() const { return New(NULL); }

  Mote* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Mote& from);
  void MergeFrom(const Mote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Mote* other);
  protected:
  explicit Mote(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string label = 1;
  bool has_label() const;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);
  ::std::string* unsafe_arena_release_label();
  void unsafe_arena_set_allocated_label(
      ::std::string* label);

  // required int32 button_bits = 2;
  bool has_button_bits() const;
  void clear_button_bits();
  static const int kButtonBitsFieldNumber = 2;
  ::google::protobuf::int32 button_bits() const;
  void set_button_bits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Mote)
 private:
  inline void set_has_label();
  inline void clear_has_label();
  inline void set_has_button_bits();
  inline void clear_has_button_bits();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int32 button_bits_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Mote* default_instance_;
};
// -------------------------------------------------------------------

class Update : public ::google::protobuf::Message {
 public:
  Update();
  virtual ~Update();

  Update(const Update& from);

  inline Update& operator=(const Update& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Update& default_instance();

  void UnsafeArenaSwap(Update* other);
  void Swap(Update* other);

  // implements Message ----------------------------------------------

  inline Update* New() const { return New(NULL); }

  Update* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Update& from);
  void MergeFrom(const Update& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Update* other);
  protected:
  explicit Update(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // required int32 mod_version = 2;
  bool has_mod_version() const;
  void clear_mod_version();
  static const int kModVersionFieldNumber = 2;
  ::google::protobuf::int32 mod_version() const;
  void set_mod_version(::google::protobuf::int32 value);

  // required int32 time = 3;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional .Mocap mocap = 4;
  bool has_mocap() const;
  void clear_mocap();
  static const int kMocapFieldNumber = 4;
  private:
  void _slow_mutable_mocap();
  void _slow_set_allocated_mocap(
      ::google::protobuf::Arena* message_arena, ::Mocap** mocap);
  ::Mocap* _slow_release_mocap();
  public:
  const ::Mocap& mocap() const;
  ::Mocap* mutable_mocap();
  ::Mocap* release_mocap();
  void set_allocated_mocap(::Mocap* mocap);
  ::Mocap* unsafe_arena_release_mocap();
  void unsafe_arena_set_allocated_mocap(
      ::Mocap* mocap);

  // repeated .Mote motes = 5;
  int motes_size() const;
  void clear_motes();
  static const int kMotesFieldNumber = 5;
  const ::Mote& motes(int index) const;
  ::Mote* mutable_motes(int index);
  ::Mote* add_motes();
  const ::google::protobuf::RepeatedPtrField< ::Mote >&
      motes() const;
  ::google::protobuf::RepeatedPtrField< ::Mote >*
      mutable_motes();

  // @@protoc_insertion_point(class_scope:Update)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mod_version();
  inline void clear_has_mod_version();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_mocap();
  inline void clear_has_mocap();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int32 mod_version_;
  ::google::protobuf::int32 time_;
  ::Mocap* mocap_;
  ::google::protobuf::RepeatedPtrField< ::Mote > motes_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Update* default_instance_;
};
// -------------------------------------------------------------------

class Updates : public ::google::protobuf::Message {
 public:
  Updates();
  virtual ~Updates();

  Updates(const Updates& from);

  inline Updates& operator=(const Updates& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Updates& default_instance();

  void UnsafeArenaSwap(Updates* other);
  void Swap(Updates* other);

  // implements Message ----------------------------------------------

  inline Updates* New() const { return New(NULL); }

  Updates* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Updates& from);
  void MergeFrom(const Updates& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Updates* other);
  protected:
  explicit Updates(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 mod_version = 1;
  bool has_mod_version() const;
  void clear_mod_version();
  static const int kModVersionFieldNumber = 1;
  ::google::protobuf::int32 mod_version() const;
  void set_mod_version(::google::protobuf::int32 value);

  // repeated .Update updates = 2;
  int updates_size() const;
  void clear_updates();
  static const int kUpdatesFieldNumber = 2;
  const ::Update& updates(int index) const;
  ::Update* mutable_updates(int index);
  ::Update* add_updates();
  const ::google::protobuf::RepeatedPtrField< ::Update >&
      updates() const;
  ::google::protobuf::RepeatedPtrField< ::Update >*
      mutable_updates();

  // @@protoc_insertion_point(class_scope:Updates)
 private:
  inline void set_has_mod_version();
  inline void clear_has_mod_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Update > updates_;
  ::google::protobuf::int32 mod_version_;
  friend void  protobuf_AddDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_AssignDesc_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto();

  void InitAsDefaultInstance();
  static Updates* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Position

// required float x = 1;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:Position.x)
  return x_;
}
inline void Position::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Position.x)
}

// required float y = 2;
inline bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:Position.y)
  return y_;
}
inline void Position::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Position.y)
}

// required float z = 3;
inline bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:Position.z)
  return z_;
}
inline void Position::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:Position.z)
}

// -------------------------------------------------------------------

// Rotation

// required float x = 1;
inline bool Rotation::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rotation::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rotation::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rotation::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Rotation::x() const {
  // @@protoc_insertion_point(field_get:Rotation.x)
  return x_;
}
inline void Rotation::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Rotation.x)
}

// required float y = 2;
inline bool Rotation::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rotation::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rotation::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rotation::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Rotation::y() const {
  // @@protoc_insertion_point(field_get:Rotation.y)
  return y_;
}
inline void Rotation::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Rotation.y)
}

// required float z = 3;
inline bool Rotation::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rotation::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rotation::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rotation::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Rotation::z() const {
  // @@protoc_insertion_point(field_get:Rotation.z)
  return z_;
}
inline void Rotation::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:Rotation.z)
}

// required float w = 4;
inline bool Rotation::has_w() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rotation::set_has_w() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rotation::clear_has_w() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rotation::clear_w() {
  w_ = 0;
  clear_has_w();
}
inline float Rotation::w() const {
  // @@protoc_insertion_point(field_get:Rotation.w)
  return w_;
}
inline void Rotation::set_w(float value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:Rotation.w)
}

// -------------------------------------------------------------------

// DataDescription

// required string name = 1;
inline bool DataDescription::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataDescription::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataDescription::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataDescription::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_name();
}
inline const ::std::string& DataDescription::name() const {
  // @@protoc_insertion_point(field_get:DataDescription.name)
  return name_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataDescription::set_name(const ::std::string& value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:DataDescription.name)
}
inline void DataDescription::set_name(const char* value) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:DataDescription.name)
}
inline void DataDescription::set_name(const char* value,
    size_t size) {
  set_has_name();
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:DataDescription.name)
}
inline ::std::string* DataDescription::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DataDescription.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DataDescription::release_name() {
  clear_has_name();
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DataDescription::unsafe_arena_release_name() {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_name();
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DataDescription::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:DataDescription.name)
}
inline void DataDescription::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:DataDescription.name)
}

// required int32 dd_id = 2;
inline bool DataDescription::has_dd_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataDescription::set_has_dd_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataDescription::clear_has_dd_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataDescription::clear_dd_id() {
  dd_id_ = 0;
  clear_has_dd_id();
}
inline ::google::protobuf::int32 DataDescription::dd_id() const {
  // @@protoc_insertion_point(field_get:DataDescription.dd_id)
  return dd_id_;
}
inline void DataDescription::set_dd_id(::google::protobuf::int32 value) {
  set_has_dd_id();
  dd_id_ = value;
  // @@protoc_insertion_point(field_set:DataDescription.dd_id)
}

// required int32 item_id = 3;
inline bool DataDescription::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DataDescription::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DataDescription::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DataDescription::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 DataDescription::item_id() const {
  // @@protoc_insertion_point(field_get:DataDescription.item_id)
  return item_id_;
}
inline void DataDescription::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:DataDescription.item_id)
}

// required sint32 parentId = 4;
inline bool DataDescription::has_parentid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DataDescription::set_has_parentid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DataDescription::clear_has_parentid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DataDescription::clear_parentid() {
  parentid_ = 0;
  clear_has_parentid();
}
inline ::google::protobuf::int32 DataDescription::parentid() const {
  // @@protoc_insertion_point(field_get:DataDescription.parentId)
  return parentid_;
}
inline void DataDescription::set_parentid(::google::protobuf::int32 value) {
  set_has_parentid();
  parentid_ = value;
  // @@protoc_insertion_point(field_set:DataDescription.parentId)
}

// required sint32 parentOffsetX = 5;
inline bool DataDescription::has_parentoffsetx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DataDescription::set_has_parentoffsetx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DataDescription::clear_has_parentoffsetx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DataDescription::clear_parentoffsetx() {
  parentoffsetx_ = 0;
  clear_has_parentoffsetx();
}
inline ::google::protobuf::int32 DataDescription::parentoffsetx() const {
  // @@protoc_insertion_point(field_get:DataDescription.parentOffsetX)
  return parentoffsetx_;
}
inline void DataDescription::set_parentoffsetx(::google::protobuf::int32 value) {
  set_has_parentoffsetx();
  parentoffsetx_ = value;
  // @@protoc_insertion_point(field_set:DataDescription.parentOffsetX)
}

// required sint32 parentOffsetY = 6;
inline bool DataDescription::has_parentoffsety() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DataDescription::set_has_parentoffsety() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DataDescription::clear_has_parentoffsety() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DataDescription::clear_parentoffsety() {
  parentoffsety_ = 0;
  clear_has_parentoffsety();
}
inline ::google::protobuf::int32 DataDescription::parentoffsety() const {
  // @@protoc_insertion_point(field_get:DataDescription.parentOffsetY)
  return parentoffsety_;
}
inline void DataDescription::set_parentoffsety(::google::protobuf::int32 value) {
  set_has_parentoffsety();
  parentoffsety_ = value;
  // @@protoc_insertion_point(field_set:DataDescription.parentOffsetY)
}

// required sint32 parentOffsetZ = 7;
inline bool DataDescription::has_parentoffsetz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DataDescription::set_has_parentoffsetz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DataDescription::clear_has_parentoffsetz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DataDescription::clear_parentoffsetz() {
  parentoffsetz_ = 0;
  clear_has_parentoffsetz();
}
inline ::google::protobuf::int32 DataDescription::parentoffsetz() const {
  // @@protoc_insertion_point(field_get:DataDescription.parentOffsetZ)
  return parentoffsetz_;
}
inline void DataDescription::set_parentoffsetz(::google::protobuf::int32 value) {
  set_has_parentoffsetz();
  parentoffsetz_ = value;
  // @@protoc_insertion_point(field_set:DataDescription.parentOffsetZ)
}

// -------------------------------------------------------------------

// LabeledMarker

// required int32 id = 1;
inline bool LabeledMarker::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LabeledMarker::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LabeledMarker::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LabeledMarker::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LabeledMarker::id() const {
  // @@protoc_insertion_point(field_get:LabeledMarker.id)
  return id_;
}
inline void LabeledMarker::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:LabeledMarker.id)
}

// required float size = 2;
inline bool LabeledMarker::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LabeledMarker::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LabeledMarker::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LabeledMarker::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline float LabeledMarker::size() const {
  // @@protoc_insertion_point(field_get:LabeledMarker.size)
  return size_;
}
inline void LabeledMarker::set_size(float value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:LabeledMarker.size)
}

// required .Position position = 3;
inline bool LabeledMarker::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LabeledMarker::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LabeledMarker::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LabeledMarker::clear_position() {
  if (position_ != NULL) position_->::Position::Clear();
  clear_has_position();
}
inline const ::Position& LabeledMarker::position() const {
  // @@protoc_insertion_point(field_get:LabeledMarker.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Position* LabeledMarker::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    _slow_mutable_position();  }
  // @@protoc_insertion_point(field_mutable:LabeledMarker.position)
  return position_;
}
inline ::Position* LabeledMarker::release_position() {
  clear_has_position();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_position();
  } else {
    ::Position* temp = position_;
    position_ = NULL;
    return temp;
  }
}
inline void LabeledMarker::set_allocated_position(::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position != NULL) {
    _slow_set_allocated_position(message_arena, &position);
  }
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:LabeledMarker.position)
}

// -------------------------------------------------------------------

// TrackedBody

// required int32 id = 1;
inline bool TrackedBody::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrackedBody::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrackedBody::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrackedBody::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TrackedBody::id() const {
  // @@protoc_insertion_point(field_get:TrackedBody.id)
  return id_;
}
inline void TrackedBody::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:TrackedBody.id)
}

// required string label = 2;
inline bool TrackedBody::has_label() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrackedBody::set_has_label() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrackedBody::clear_has_label() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrackedBody::clear_label() {
  label_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_label();
}
inline const ::std::string& TrackedBody::label() const {
  // @@protoc_insertion_point(field_get:TrackedBody.label)
  return label_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrackedBody::set_label(const ::std::string& value) {
  set_has_label();
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:TrackedBody.label)
}
inline void TrackedBody::set_label(const char* value) {
  set_has_label();
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:TrackedBody.label)
}
inline void TrackedBody::set_label(const char* value,
    size_t size) {
  set_has_label();
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:TrackedBody.label)
}
inline ::std::string* TrackedBody::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:TrackedBody.label)
  return label_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TrackedBody::release_label() {
  clear_has_label();
  return label_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* TrackedBody::unsafe_arena_release_label() {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_label();
  return label_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void TrackedBody::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:TrackedBody.label)
}
inline void TrackedBody::unsafe_arena_set_allocated_label(
    ::std::string* label) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      label, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:TrackedBody.label)
}

// required bool trackingValid = 3;
inline bool TrackedBody::has_trackingvalid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TrackedBody::set_has_trackingvalid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TrackedBody::clear_has_trackingvalid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TrackedBody::clear_trackingvalid() {
  trackingvalid_ = false;
  clear_has_trackingvalid();
}
inline bool TrackedBody::trackingvalid() const {
  // @@protoc_insertion_point(field_get:TrackedBody.trackingValid)
  return trackingvalid_;
}
inline void TrackedBody::set_trackingvalid(bool value) {
  set_has_trackingvalid();
  trackingvalid_ = value;
  // @@protoc_insertion_point(field_set:TrackedBody.trackingValid)
}

// required .Position position = 4;
inline bool TrackedBody::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TrackedBody::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TrackedBody::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TrackedBody::clear_position() {
  if (position_ != NULL) position_->::Position::Clear();
  clear_has_position();
}
inline const ::Position& TrackedBody::position() const {
  // @@protoc_insertion_point(field_get:TrackedBody.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::Position* TrackedBody::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    _slow_mutable_position();  }
  // @@protoc_insertion_point(field_mutable:TrackedBody.position)
  return position_;
}
inline ::Position* TrackedBody::release_position() {
  clear_has_position();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_position();
  } else {
    ::Position* temp = position_;
    position_ = NULL;
    return temp;
  }
}
inline void TrackedBody::set_allocated_position(::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position != NULL) {
    _slow_set_allocated_position(message_arena, &position);
  }
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:TrackedBody.position)
}

// required .Rotation rotation = 5;
inline bool TrackedBody::has_rotation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TrackedBody::set_has_rotation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TrackedBody::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TrackedBody::clear_rotation() {
  if (rotation_ != NULL) rotation_->::Rotation::Clear();
  clear_has_rotation();
}
inline const ::Rotation& TrackedBody::rotation() const {
  // @@protoc_insertion_point(field_get:TrackedBody.rotation)
  return rotation_ != NULL ? *rotation_ : *default_instance_->rotation_;
}
inline ::Rotation* TrackedBody::mutable_rotation() {
  set_has_rotation();
  if (rotation_ == NULL) {
    _slow_mutable_rotation();  }
  // @@protoc_insertion_point(field_mutable:TrackedBody.rotation)
  return rotation_;
}
inline ::Rotation* TrackedBody::release_rotation() {
  clear_has_rotation();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_rotation();
  } else {
    ::Rotation* temp = rotation_;
    rotation_ = NULL;
    return temp;
  }
}
inline void TrackedBody::set_allocated_rotation(::Rotation* rotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rotation_;
  }
  if (rotation != NULL) {
    _slow_set_allocated_rotation(message_arena, &rotation);
  }
  rotation_ = rotation;
  if (rotation) {
    set_has_rotation();
  } else {
    clear_has_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:TrackedBody.rotation)
}

// optional float meanError = 6;
inline bool TrackedBody::has_meanerror() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TrackedBody::set_has_meanerror() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TrackedBody::clear_has_meanerror() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TrackedBody::clear_meanerror() {
  meanerror_ = 0;
  clear_has_meanerror();
}
inline float TrackedBody::meanerror() const {
  // @@protoc_insertion_point(field_get:TrackedBody.meanError)
  return meanerror_;
}
inline void TrackedBody::set_meanerror(float value) {
  set_has_meanerror();
  meanerror_ = value;
  // @@protoc_insertion_point(field_set:TrackedBody.meanError)
}

// repeated .LabeledMarker markers = 7;
inline int TrackedBody::markers_size() const {
  return markers_.size();
}
inline void TrackedBody::clear_markers() {
  markers_.Clear();
}
inline const ::LabeledMarker& TrackedBody::markers(int index) const {
  // @@protoc_insertion_point(field_get:TrackedBody.markers)
  return markers_.Get(index);
}
inline ::LabeledMarker* TrackedBody::mutable_markers(int index) {
  // @@protoc_insertion_point(field_mutable:TrackedBody.markers)
  return markers_.Mutable(index);
}
inline ::LabeledMarker* TrackedBody::add_markers() {
  // @@protoc_insertion_point(field_add:TrackedBody.markers)
  return markers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LabeledMarker >&
TrackedBody::markers() const {
  // @@protoc_insertion_point(field_list:TrackedBody.markers)
  return markers_;
}
inline ::google::protobuf::RepeatedPtrField< ::LabeledMarker >*
TrackedBody::mutable_markers() {
  // @@protoc_insertion_point(field_mutable_list:TrackedBody.markers)
  return &markers_;
}

// -------------------------------------------------------------------

// Mocap

// required bool duringRecording = 1;
inline bool Mocap::has_duringrecording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mocap::set_has_duringrecording() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mocap::clear_has_duringrecording() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mocap::clear_duringrecording() {
  duringrecording_ = false;
  clear_has_duringrecording();
}
inline bool Mocap::duringrecording() const {
  // @@protoc_insertion_point(field_get:Mocap.duringRecording)
  return duringrecording_;
}
inline void Mocap::set_duringrecording(bool value) {
  set_has_duringrecording();
  duringrecording_ = value;
  // @@protoc_insertion_point(field_set:Mocap.duringRecording)
}

// required bool trackedModelsChanged = 2;
inline bool Mocap::has_trackedmodelschanged() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mocap::set_has_trackedmodelschanged() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mocap::clear_has_trackedmodelschanged() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mocap::clear_trackedmodelschanged() {
  trackedmodelschanged_ = false;
  clear_has_trackedmodelschanged();
}
inline bool Mocap::trackedmodelschanged() const {
  // @@protoc_insertion_point(field_get:Mocap.trackedModelsChanged)
  return trackedmodelschanged_;
}
inline void Mocap::set_trackedmodelschanged(bool value) {
  set_has_trackedmodelschanged();
  trackedmodelschanged_ = value;
  // @@protoc_insertion_point(field_set:Mocap.trackedModelsChanged)
}

// optional string timecode = 3;
inline bool Mocap::has_timecode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Mocap::set_has_timecode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Mocap::clear_has_timecode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Mocap::clear_timecode() {
  timecode_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_timecode();
}
inline const ::std::string& Mocap::timecode() const {
  // @@protoc_insertion_point(field_get:Mocap.timecode)
  return timecode_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mocap::set_timecode(const ::std::string& value) {
  set_has_timecode();
  timecode_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:Mocap.timecode)
}
inline void Mocap::set_timecode(const char* value) {
  set_has_timecode();
  timecode_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:Mocap.timecode)
}
inline void Mocap::set_timecode(const char* value,
    size_t size) {
  set_has_timecode();
  timecode_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:Mocap.timecode)
}
inline ::std::string* Mocap::mutable_timecode() {
  set_has_timecode();
  // @@protoc_insertion_point(field_mutable:Mocap.timecode)
  return timecode_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Mocap::release_timecode() {
  clear_has_timecode();
  return timecode_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Mocap::unsafe_arena_release_timecode() {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_timecode();
  return timecode_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Mocap::set_allocated_timecode(::std::string* timecode) {
  if (timecode != NULL) {
    set_has_timecode();
  } else {
    clear_has_timecode();
  }
  timecode_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timecode,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:Mocap.timecode)
}
inline void Mocap::unsafe_arena_set_allocated_timecode(
    ::std::string* timecode) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (timecode != NULL) {
    set_has_timecode();
  } else {
    clear_has_timecode();
  }
  timecode_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      timecode, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:Mocap.timecode)
}

// repeated .TrackedBody tracked_bodies = 4;
inline int Mocap::tracked_bodies_size() const {
  return tracked_bodies_.size();
}
inline void Mocap::clear_tracked_bodies() {
  tracked_bodies_.Clear();
}
inline const ::TrackedBody& Mocap::tracked_bodies(int index) const {
  // @@protoc_insertion_point(field_get:Mocap.tracked_bodies)
  return tracked_bodies_.Get(index);
}
inline ::TrackedBody* Mocap::mutable_tracked_bodies(int index) {
  // @@protoc_insertion_point(field_mutable:Mocap.tracked_bodies)
  return tracked_bodies_.Mutable(index);
}
inline ::TrackedBody* Mocap::add_tracked_bodies() {
  // @@protoc_insertion_point(field_add:Mocap.tracked_bodies)
  return tracked_bodies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TrackedBody >&
Mocap::tracked_bodies() const {
  // @@protoc_insertion_point(field_list:Mocap.tracked_bodies)
  return tracked_bodies_;
}
inline ::google::protobuf::RepeatedPtrField< ::TrackedBody >*
Mocap::mutable_tracked_bodies() {
  // @@protoc_insertion_point(field_mutable_list:Mocap.tracked_bodies)
  return &tracked_bodies_;
}

// -------------------------------------------------------------------

// Mote

// required string label = 1;
inline bool Mote::has_label() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Mote::set_has_label() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Mote::clear_has_label() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Mote::clear_label() {
  label_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_label();
}
inline const ::std::string& Mote::label() const {
  // @@protoc_insertion_point(field_get:Mote.label)
  return label_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mote::set_label(const ::std::string& value) {
  set_has_label();
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:Mote.label)
}
inline void Mote::set_label(const char* value) {
  set_has_label();
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:Mote.label)
}
inline void Mote::set_label(const char* value,
    size_t size) {
  set_has_label();
  label_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:Mote.label)
}
inline ::std::string* Mote::mutable_label() {
  set_has_label();
  // @@protoc_insertion_point(field_mutable:Mote.label)
  return label_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Mote::release_label() {
  clear_has_label();
  return label_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Mote::unsafe_arena_release_label() {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_label();
  return label_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Mote::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:Mote.label)
}
inline void Mote::unsafe_arena_set_allocated_label(
    ::std::string* label) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (label != NULL) {
    set_has_label();
  } else {
    clear_has_label();
  }
  label_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      label, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:Mote.label)
}

// required int32 button_bits = 2;
inline bool Mote::has_button_bits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Mote::set_has_button_bits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Mote::clear_has_button_bits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Mote::clear_button_bits() {
  button_bits_ = 0;
  clear_has_button_bits();
}
inline ::google::protobuf::int32 Mote::button_bits() const {
  // @@protoc_insertion_point(field_get:Mote.button_bits)
  return button_bits_;
}
inline void Mote::set_button_bits(::google::protobuf::int32 value) {
  set_has_button_bits();
  button_bits_ = value;
  // @@protoc_insertion_point(field_set:Mote.button_bits)
}

// -------------------------------------------------------------------

// Update

// required string id = 1;
inline bool Update::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Update::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Update::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Update::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_has_id();
}
inline const ::std::string& Update::id() const {
  // @@protoc_insertion_point(field_get:Update.id)
  return id_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Update::set_id(const ::std::string& value) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:Update.id)
}
inline void Update::set_id(const char* value) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:Update.id)
}
inline void Update::set_id(const char* value,
    size_t size) {
  set_has_id();
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:Update.id)
}
inline ::std::string* Update::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Update.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Update::release_id() {
  clear_has_id();
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Update::unsafe_arena_release_id() {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  clear_has_id();
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Update::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:Update.id)
}
inline void Update::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:Update.id)
}

// required int32 mod_version = 2;
inline bool Update::has_mod_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Update::set_has_mod_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Update::clear_has_mod_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Update::clear_mod_version() {
  mod_version_ = 0;
  clear_has_mod_version();
}
inline ::google::protobuf::int32 Update::mod_version() const {
  // @@protoc_insertion_point(field_get:Update.mod_version)
  return mod_version_;
}
inline void Update::set_mod_version(::google::protobuf::int32 value) {
  set_has_mod_version();
  mod_version_ = value;
  // @@protoc_insertion_point(field_set:Update.mod_version)
}

// required int32 time = 3;
inline bool Update::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Update::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Update::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Update::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 Update::time() const {
  // @@protoc_insertion_point(field_get:Update.time)
  return time_;
}
inline void Update::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Update.time)
}

// optional .Mocap mocap = 4;
inline bool Update::has_mocap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Update::set_has_mocap() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Update::clear_has_mocap() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Update::clear_mocap() {
  if (mocap_ != NULL) mocap_->::Mocap::Clear();
  clear_has_mocap();
}
inline const ::Mocap& Update::mocap() const {
  // @@protoc_insertion_point(field_get:Update.mocap)
  return mocap_ != NULL ? *mocap_ : *default_instance_->mocap_;
}
inline ::Mocap* Update::mutable_mocap() {
  set_has_mocap();
  if (mocap_ == NULL) {
    _slow_mutable_mocap();  }
  // @@protoc_insertion_point(field_mutable:Update.mocap)
  return mocap_;
}
inline ::Mocap* Update::release_mocap() {
  clear_has_mocap();
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_mocap();
  } else {
    ::Mocap* temp = mocap_;
    mocap_ = NULL;
    return temp;
  }
}
inline void Update::set_allocated_mocap(::Mocap* mocap) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mocap_;
  }
  if (mocap != NULL) {
    _slow_set_allocated_mocap(message_arena, &mocap);
  }
  mocap_ = mocap;
  if (mocap) {
    set_has_mocap();
  } else {
    clear_has_mocap();
  }
  // @@protoc_insertion_point(field_set_allocated:Update.mocap)
}

// repeated .Mote motes = 5;
inline int Update::motes_size() const {
  return motes_.size();
}
inline void Update::clear_motes() {
  motes_.Clear();
}
inline const ::Mote& Update::motes(int index) const {
  // @@protoc_insertion_point(field_get:Update.motes)
  return motes_.Get(index);
}
inline ::Mote* Update::mutable_motes(int index) {
  // @@protoc_insertion_point(field_mutable:Update.motes)
  return motes_.Mutable(index);
}
inline ::Mote* Update::add_motes() {
  // @@protoc_insertion_point(field_add:Update.motes)
  return motes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Mote >&
Update::motes() const {
  // @@protoc_insertion_point(field_list:Update.motes)
  return motes_;
}
inline ::google::protobuf::RepeatedPtrField< ::Mote >*
Update::mutable_motes() {
  // @@protoc_insertion_point(field_mutable_list:Update.motes)
  return &motes_;
}

// -------------------------------------------------------------------

// Updates

// required int32 mod_version = 1;
inline bool Updates::has_mod_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Updates::set_has_mod_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Updates::clear_has_mod_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Updates::clear_mod_version() {
  mod_version_ = 0;
  clear_has_mod_version();
}
inline ::google::protobuf::int32 Updates::mod_version() const {
  // @@protoc_insertion_point(field_get:Updates.mod_version)
  return mod_version_;
}
inline void Updates::set_mod_version(::google::protobuf::int32 value) {
  set_has_mod_version();
  mod_version_ = value;
  // @@protoc_insertion_point(field_set:Updates.mod_version)
}

// repeated .Update updates = 2;
inline int Updates::updates_size() const {
  return updates_.size();
}
inline void Updates::clear_updates() {
  updates_.Clear();
}
inline const ::Update& Updates::updates(int index) const {
  // @@protoc_insertion_point(field_get:Updates.updates)
  return updates_.Get(index);
}
inline ::Update* Updates::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:Updates.updates)
  return updates_.Mutable(index);
}
inline ::Update* Updates::add_updates() {
  // @@protoc_insertion_point(field_add:Updates.updates)
  return updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Update >&
Updates::updates() const {
  // @@protoc_insertion_point(field_list:Updates.updates)
  return updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::Update >*
Updates::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:Updates.updates)
  return &updates_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Desktop_2fMotes_20Protobuf_2fupdate_5fprotocol_2eproto__INCLUDED
